#!/bin/sh

SRCNAMEID=${1:-$(cat /proc/sys/kernel/hostname | grep -o "....$")}
HOSTNAMEID=$(cat /proc/sys/kernel/hostname | grep -o "....$")
[ "$SRCNAMEID" == "$HOSTNAMEID" ] || exit
set -x

shift
DSTNAMEID=${1:-4174}

shift
IPERF=${1:-YES}

shift
PROTOS=${1:-olsr1_bmx_bat_babel_olsr2}
OLSR1=$(echo $PROTOS | grep olsr1)
BMX=$(echo $PROTOS | grep bmx)
BAT=$(echo $PROTOS | grep bat)
BABEL=$(echo $PROTOS | grep babel)
OLSR2=$(echo $PROTOS | grep olsr2)
PROTOCOLS_NUM=$((( $([ "$OLSR1" ] && echo 1 || echo 0) + $([ "$BMX" ] && echo 1 || echo 0) + $([ "$BAT" ] && echo 1 || echo 0) + $([ "$BABEL" ] && echo 1 || echo 0) + $([ "$OLSR2" ] && echo 1 || echo 0) )))

shift
OUTDIR=${1:-/save/wbm-axn}

shift
DURATION=${1:-200}
TCPDUMP_CAPTURE_SIZE=${5:-100}
TCPDUMP_CAPTURE_DEV=${5:-wbm1}

PING6_INTERVAL="1"
PING6_SIZE="400"

IPERF_DURATION="10"

DSTADDRID=$DSTNAMEID #$(bmx6 -c originators | grep "wibed-..$DSTNAMEID" | awk '{print $3}' | awk -F: '{print $3}' )
OLSR1_V6="fdba:11:$DSTADDRID::1"
BMX_V6="fdba:12:$DSTADDRID::1"
BAT_V6="fdbb::$DSTADDRID"
BABEL_V6="fdba:14:$DSTADDRID::1"
OLSR2_V6="fdba:15:$DSTADDRID::1"

mkdir -p $OUTDIR
rm -f $OUTDIR/*


ps                  | tee $OUTDIR/ps-begin.log
bmx6 -c status interfaces links originators tunnels | tee $OUTDIR/bmx-cd8-begin.log
ip -4 route         | tee $OUTDIR/ip4routes-begin.log
ip -6 route         | tee $OUTDIR/ip6routes-begin.log
ip -6 route ls t 60 | tee $OUTDIR/ip6routes60-begin.log
ip addr             | tee $OUTDIR/ipaddr-begin.log

echo Starting top...
timeout $DURATION top -b -d1 >> $OUTDIR/top.log &


echo Starting tcpdump...
timeout $DURATION tcpdump -nve -i $TCPDUMP_CAPTURE_DEV -s $TCPDUMP_CAPTURE_SIZE -w $OUTDIR/tcpdump.raw port 6240 or port 698 or port 269 or port 6696 or \(ether proto 0x4305 and \( ether[14]==0x00 or ether[14]==0x44 \) \) 2>/dev/null &

echo Starting pings...
[ $OLSR1 ] && timeout --signal=INT $DURATION sh -c "while true; do ping6 -i $PING6_INTERVAL -s $PING6_SIZE -n $OLSR1_V6 >> $OUTDIR/ping6-olsr1.log  2>&1 && break || sleep 1; done" &
[ $BMX ]   && timeout --signal=INT $DURATION sh -c "while true; do ping6 -i $PING6_INTERVAL -s $PING6_SIZE -n $BMX_V6   >> $OUTDIR/ping6-bmx.log    2>&1 && break || sleep 1; done" &
[ $BAT ]   && timeout --signal=INT $DURATION sh -c "while true; do ping6 -i $PING6_INTERVAL -s $PING6_SIZE -n $BAT_V6   >> $OUTDIR/ping6-batadv.log 2>&1 && break || sleep 1; done" &
[ $BABEL ] && timeout --signal=INT $DURATION sh -c "while true; do ping6 -i $PING6_INTERVAL -s $PING6_SIZE -n $BABEL_V6 >> $OUTDIR/ping6-babel.log  2>&1 && break || sleep 1; done" &
[ $OLSR2 ] && timeout --signal=INT $DURATION sh -c "while true; do ping6 -i $PING6_INTERVAL -s $PING6_SIZE -n $OLSR2_V6 >> $OUTDIR/ping6-olsr2.log  2>&1 && break || sleep 1; done" &

echo Starting mtr...
[ $OLSR1 ] && timeout --signal=INT $DURATION sh -c "while true; do date +%s.%N; mtr -nt -6 -r -c 1 $OLSR1_V6;  sleep 1; done" >> $OUTDIR/mtr-olsr1.log &
[ $BMX ]   && timeout --signal=INT $DURATION sh -c "while true; do date +%s.%N; mtr -nt -6 -r -c 1 $BMX_V6;    sleep 1; done" >> $OUTDIR/mtr-bmx.log &
[ $BAT ]   && timeout --signal=INT $DURATION sh -c "while true; do date +%s.%N; mtr -nt -6 -r -c 1 $BAT_V6;    sleep 1; done" >> $OUTDIR/mtr-batadv.log &
[ $BABEL ] && timeout --signal=INT $DURATION sh -c "while true; do date +%s.%N; mtr -nt -6 -r -c 1 $BABEL_V6;  sleep 1; done" >> $OUTDIR/mtr-babel.log &
[ $OLSR2 ] && timeout --signal=INT $DURATION sh -c "while true; do date +%s.%N; mtr -nt -6 -r -c 1 $OLSR2_V6;  sleep 1; done" >> $OUTDIR/mtr-olsr2.log &


if [ "$IPERF" == "YES" ]; then
    echo Starting iperfs...
    IPERF_ROUNDS=$((( $DURATION / $PROTOCOLS_NUM / $IPERF_DURATION )))
    IPERF_COUNT=1
    while [ $IPERF_COUNT -le $IPERF_ROUNDS ]; do

	[ $OLSR1 ] && timeout --signal=INT $IPERF_DURATION iperf -f k -c -C -D 1 -j -H $OLSR1_V6 > $OUTDIR/iperf-olsr1-$IPERF_COUNT.log
	[ $BMX ]   && timeout --signal=INT $IPERF_DURATION iperf -f k -c -C -D 1 -j -H $BMX_V6   > $OUTDIR/iperf-bmx-$IPERF_COUNT.log
	[ $BAT ]   && timeout --signal=INT $IPERF_DURATION iperf -f k -c -C -D 1 -j -H $BAT_V6   > $OUTDIR/iperf-batadv-$IPERF_COUNT.log
	[ $BABEL ] && timeout --signal=INT $IPERF_DURATION iperf -f k -c -C -D 1 -j -H $BABEL_V6 > $OUTDIR/iperf-babel-$IPERF_COUNT.log
	[ $OLSR2 ] && timeout --signal=INT $IPERF_DURATION iperf -f k -c -C -D 1 -j -H $OLSR2_V6 > $OUTDIR/iperf-olsr2-$IPERF_COUNT.log

	IPERF_COUNT=$((( $IPERF_COUNT + 1 )));
    done
fi

set +x

wait

ps                  | tee $OUTDIR/ps-end.log
bmx6 -c status interfaces links originators tunnels | tee $OUTDIR/bmx-cd8-end.log
ip -4 route         | tee $OUTDIR/ip4routes-end.log
ip -6 route         | tee $OUTDIR/ip6routes-end.log
ip -6 route ls t 60 | tee $OUTDIR/ip6routes60-end.log
ip addr             | tee $OUTDIR/ipaddr-end.log


echo Finished!

